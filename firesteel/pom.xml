<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ (c) Copyright 2016 Hewlett Packard Enterprise Development LP
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~     http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License. 
 -->

<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-parent</artifactId>
        <version>1.2.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
	<groupId>com.hp.hpl</groupId>
	<artifactId>firesteel</artifactId>
	<packaging>jar</packaging>
	<version>0.1</version>
	<name>HP Labs Project Fire Steel</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <kryo.version>3.0.0</kryo.version>
	</properties>

    <repositories>  
        <repository>  
            <id>scala-tools.org</id>  
            <name>Scala-tools Maven2 Repository</name>  
            <url>http://scala-tools.org/repo-releases</url>  
        </repository>  
    </repositories>    
    
    <dependencies>  
    <!-- Scala version is very important. Luckily the plugin warns you if you don't specify:   
                 [WARNING] you don't define org.scala-lang:scala-library as a dependency of the project -->  
        <dependency>  
            <groupId>org.scala-lang</groupId>  
            <artifactId>scala-library</artifactId>  
            <version>2.10.4</version>  
        </dependency> 
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>reflectasm</artifactId>
            <version>1.10.0</version>
            <classifier>shaded</classifier>
        </dependency> 
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>kryo</artifactId>
            <version>${kryo.version}</version>
        </dependency>
    </dependencies>  
    
	<build>
		<plugins>
            <plugin>  
                <groupId>org.scala-tools</groupId>  
                <artifactId>maven-scala-plugin</artifactId>  
                <version>2.14.2</version>  
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                         <!--   <goal>testCompile</goal> -->
                        </goals>
		    </execution>
                </executions>
            </plugin>  

            <!-- the following plugin is copied from Spark 1.4, option is needed to suppress warnings from sun.misc.Unsafe usage -->
            <plugin>
               <groupId>net.alchim31.maven</groupId>
               <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                         <!--   <goal>testCompile</goal> -->
                        </goals>
		    </execution>
                </executions>
               <configuration>
                 <javacArgs>
                  <!-- This option is needed to suppress warnings from sun.misc.Unsafe usage -->
                  <javacArg>-XDignore.symbol.file</javacArg>
                 </javacArgs>
               </configuration>
           </plugin>
       
           <!-- the following plugin is copied from Spark 1.4, option is needed to suppress warnings from sun.misc.Unsafe usage -->
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <configuration>
                  <compilerArgs>
                   <!-- This option is needed to suppress warnings from sun.misc.Unsafe usage -->
                   <arg>-XDignore.symbol.file</arg>
                  </compilerArgs>
               </configuration>
           </plugin>

            <plugin>
              <artifactId>maven-assembly-plugin</artifactId>
              <configuration>
                <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
                </descriptorRefs>
              </configuration>
            </plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<configuration>
							<target
								name="jni"
								description="Generate headers and compile the native code">
								<echo>Generating JNI headers</echo>
								<!-- Does not work with OpenJDK, because Ant javah assumes Sun JVM
								<javah
									destdir="${project.basedir}/src/main/c++"
									classpath="${project.build.outputDirectory}">
									<class name="ie.agisoft.Test"/>
								</javah>
								-->
								<exec executable="javah" >
									<arg value="-d" />
									<arg value="${project.basedir}/src/main/cpp/jnishuffle" />
									<arg value="-classpath" />
									<arg value="${project.basedir}/src/main/java" />
									<arg value="-force" />
									<arg value="com.hp.hpl.firesteel.shuffle.MapSHMShuffleStore" />
								</exec>

								<exec executable="javah" >
									<arg value="-d" />
									<arg value="${project.basedir}/src/main/cpp/jnishuffle" />
									<arg value="-classpath" />
									<arg value="${project.basedir}/src/main/java" />
									<arg value="-force" />
									<arg value="com.hp.hpl.firesteel.shuffle.ReduceSHMShuffleStore" />
								</exec>

								<exec executable="javah" >
									<arg value="-d" />
									<arg value="${project.basedir}/src/main/cpp/jnishuffle" />
									<arg value="-classpath" />
									<arg value="${project.basedir}/src/main/java" />
									<arg value="-force" />
									<arg value="com.hp.hpl.firesteel.shuffle.ShuffleStoreManager" />
								</exec>

				                                <exec executable="javah" >
                                				    <arg value="-d" />
				                                    <arg value="${project.basedir}/src/main/cpp/jniedgepartition" />
                                				    <arg value="-classpath" />
				                                    <arg value="${project.basedir}/src/main/java" />
				                                    <arg value="-force" />
				                                    <arg value="com.hp.hpl.firesteel.edgepartition.EdgeMessageComputeAggregate" />
							       </exec>

                                                                <exec executable="javah" >
                                                                        <arg value="-d" />
                                                                        <arg value="${project.basedir}/src/main/cpp/jnioffheapstore" />
                                                                        <arg value="-classpath" />
                                                                        <arg value="${project.basedir}/src/main/java" />
                                                                        <arg value="-force" />
                                                                        <arg value="com.hp.hpl.firesteel.offheapstore.OffHeapStore" />
                                                                </exec>

								<!-- temporarily change from build-cpp.sh to build-cpp-withmake.sh -->
								<!-- <exec executable="./build-cpp.sh" failonerror="true"> </exec> -->
								<exec executable="./build-cpp-withmake.sh" failonerror="true"> </exec>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
